@import url('https://fonts.googleapis.com/css2?family=DM+Sans:ital,wght@0,400;0,500;0,600;0,700;1,400&display=swap');
@import url('https://api.fontshare.com/v2/css?f[]=clash-display@400,500,600,700&display=swap');

/* Define custom properties for gray colors */
:root {
  --gray-50: #f9fafb;
  --gray-100: #f3f4f6;
  --gray-200: #e5e7eb;
  --gray-300: #d1d5db;
  --gray-400: #9ca3af;
  --gray-500: #6b7280;
  --gray-600: #4b5563;
  --gray-700: #374151;
  --gray-800: #1f2937;
  --gray-900: #111827;
  --gray-950: #030712;
}

.dark {
  --gray-50: #030712;
  --gray-100: #111827;
  --gray-200: #1f2937;
  --gray-300: #374151;
  --gray-400: #4b5563;
  --gray-500: #6b7280;
  --gray-600: #9ca3af;
  --gray-700: #d1d5db;
  --gray-800: #e5e7eb;
  --gray-900: #f3f4f6;
  --gray-950: #f9fafb;
}

/* Tailwind directives */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Add utility classes for gray colors */
.text-gray-300 {
  color: var(--gray-300);
}

.bg-gray-200 {
  background-color: var(--gray-200);
}

.border-gray-300 {
  border-color: var(--gray-300);
}

/* Custom animations for components */
@keyframes gradient-shift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes float {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
  100% {
    transform: translateY(0px);
  }
}

@keyframes pulse-soft {
  0% {
    box-shadow: 0 0 0 0 rgba(99, 102, 241, 0.4);
  }
  70% {
    box-shadow: 0 0 0 15px rgba(99, 102, 241, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(99, 102, 241, 0);
  }
}

@keyframes fade-in-up {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes shimmer {
  0% {
    background-position: -100% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

@keyframes scale-pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

@keyframes rotate-slow {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Custom utility classes */
.animate-gradient-x {
  background-size: 200% 200%;
  animation: gradient-shift 8s ease infinite;
}

.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-pulse-soft {
  animation: pulse-soft 2s infinite;
}

.animate-fade-in-up {
  animation: fade-in-up 0.6s ease-out forwards;
}

.animate-shimmer {
  background: linear-gradient(90deg, 
    rgba(255,255,255,0) 0%, 
    rgba(255,255,255,0.2) 50%, 
    rgba(255,255,255,0) 100%);
  background-size: 200% 100%;
  animation: shimmer 3s infinite;
}

.dark .animate-shimmer {
  background: linear-gradient(90deg, 
    rgba(255,255,255,0) 0%, 
    rgba(255,255,255,0.05) 50%, 
    rgba(255,255,255,0) 100%);
  background-size: 200% 100%;
  animation: shimmer 3s infinite;
}

.animate-scale-pulse {
  animation: scale-pulse 2s ease-in-out infinite;
}

.animate-rotate-slow {
  animation: rotate-slow 20s linear infinite;
}

.transition-transform-slow {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 700ms;
}

/* Glass effect utility */
.glass-effect {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.05);
}

.dark .glass-effect {
  background: rgba(15, 23, 42, 0.3);
  border: 1px solid rgba(255, 255, 255, 0.03);
}

.card-hover-glow {
  transition: box-shadow 0.3s ease;
}

.card-hover-glow:hover {
  box-shadow: 0 0 30px rgba(79, 70, 229, 0.2);
}

.dark .card-hover-glow:hover {
  box-shadow: 0 0 30px rgba(79, 70, 229, 0.15);
}

/* Base styles */
html {
  scroll-behavior: smooth;
  width: 100%;
  max-width: 100%;
}

body {
  font-family: 'DM Sans', sans-serif;
  transition: background-color 0.3s ease, color 0.3s ease;
  margin: 0;
  padding: 0;
  width: 100%;
  max-width: 100%;
}

#root {
  width: 100%;
  max-width: 100%;
}

/* Ensure header is not affected by overflow hidden */
header {
  overflow: visible !important;
  z-index: 50;
}

/* Ensure hamburger menu button is always visible */
header button {
  overflow: visible !important;
  z-index: 51;
}

.dark body {
  background-color: var(--gray-900);
  color: var(--gray-300);
}

h1, h2, h3, h4, h5, h6 {
  font-family: 'Clash Display', sans-serif;
  word-wrap: break-word;
  overflow-wrap: break-word;
}

/* Handle long words and URLs */
p, div, span, h1, h2, h3, h4, h5, h6 {
  word-wrap: break-word;
  overflow-wrap: break-word;
  hyphens: auto;
}

/* Ensure images don't overflow */
img {
  max-width: 100%;
  height: auto;
}

/* Handle code blocks and pre elements */
pre, code {
  white-space: pre-wrap;
  word-wrap: break-word;
  overflow-wrap: break-word;
  max-width: 100%;
}

/* Mobile-specific fixes */
@media (max-width: 768px) {
  html, body, #root {
    width: 100%;
    max-width: 100%;
  }
  
  /* Ensure header and its elements are always visible */
  header, header * {
    overflow: visible !important;
  }
  
  /* Prevent text overflow on mobile */
  h1, h2, h3, h4, h5, h6, p, span, div {
    word-wrap: break-word;
    overflow-wrap: break-word;
    hyphens: auto;
    max-width: 100%;
  }
  
  /* Ensure containers don't overflow */
  .container, .max-w-5xl, .max-w-7xl, .max-w-4xl, .max-w-3xl, .max-w-2xl, .max-w-md, .max-w-sm {
    max-width: 100%;
    width: 100%;
  }
  
  /* Prevent form elements from overflowing */
  input, textarea, select, button {
    max-width: 100%;
    width: 100%;
  }
  
  /* Ensure flex and grid containers respect width */
  .flex, .grid, .flex-col, .flex-row {
    max-width: 100%;
    width: 100%;
  }
}